{"pageProps":{"postData":{"id":"rollback-test-file","code":"func DeferRollbackDir(t *testing.T, srcDir string) {\n\tt.Helper()\n\n\tmemo := setup(t, srcDir)\n\n\tt.Cleanup(func() { teardown(t, memo) })\n}\n","language":"go","contentHtml":"<p>秒殺でブログやめてたのですが、いかんと思い、書きます。</p>\n<p>Goでテスト書いているときに(というかどんな言語でも)</p>\n<p>テスト中に変更されたテストデータをテスト終了後に戻したいときありませんか?</p>\n<ul>\n<li>テキストファイルに追記されていることを確認するテストで、テスト終了後にもとのテキストファイルにもどしてほしい！</li>\n<li>画像がマスキングされることを確認するテストで、テスト終了後にもとの画像にもどしてほしい！</li>\n<li>テストデータをGit管理していると差分が出るのでもどしてほしい!</li>\n</ul>\n<p>あるよね(たまにね)</p>\n<p>なのでそういう便利な関数を書いてみました。</p>\n<h1>Sample Code</h1>\n<p><a href=\"https://github.com/the-coding-dead/code/blob/main/testutils/defer_rollback_dir.go\">DeferRollbackDir</a></p>\n<h1>How To Use</h1>\n<p>こんなふうにテスト対象を実行する前にディレクトリを登録しておくと</p>\n<p>テスト終了後にディレクトリをもとに戻してくれます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">TestHoge</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  testutils<span class=\"token punctuation\">.</span><span class=\"token function\">DeferRollbackDir</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"testdata/hoge\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">ChangeHoge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これを作るために<a href=\"https://golang.org/pkg/os\">os</a>パッケージ周りを再復習しました。</p>\n<h2><a href=\"https://golang.org/pkg/os/#Open\">os.Open</a></h2>\n<p>これは読み込むためにしか利用できません。</p>\n<p>実装上は<a href=\"https://golang.org/pkg/os/#OpenFile\">os.OpenFile</a>を読み込み専用で開いています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>File<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">OpenFile</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> O_RDONLY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2><a href=\"https://golang.org/pkg/os/#Create\">os.Create</a></h2>\n<p>これは作成時用です。</p>\n<p>存在している場合はtruncateします。</p>\n<p>ディレクトリ内のファイルの退避として<a href=\"https://golang.org/pkg/os/#Create\">os.Create</a>を使用します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>File<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">OpenFile</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> O_RDWR<span class=\"token operator\">|</span>O_CREATE<span class=\"token operator\">|</span>O_TRUNC<span class=\"token punctuation\">,</span> <span class=\"token number\">0666</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2><a href=\"https://golang.org/pkg/os/#RemoveAll\">os.RemoveAll</a></h2>\n<p>ディレクトリまたはファイルを削除できます。</p>\n<p><a href=\"https://golang.org/pkg/os/#Remove\">os.Remove</a>は空のディレクトリかファイルにしか使用できません。</p>\n<p><a href=\"https://golang.org/pkg/os/#RemoveAll\">os.RemoveAll</a>はディレクトリにファイルがある場合も削除可能です。</p>\n<p><a href=\"https://github.com/the-coding-dead/code/blob/main/testutils/defer_rollback_dir.go\">DeferRollbackDir</a>はディレクトリ復元する前に、対象のディレクトリを削除することにしました。</p>\n<h2><a href=\"https://golang.org/pkg/os/#Mkdir\">os.Mkdir</a></h2>\n<p>ディレクトリを作成します。</p>\n<p>親のディレクトリがない場合はエラーが起きます。</p>\n<p><a href=\"https://github.com/the-coding-dead/code/blob/main/testutils/defer_rollback_dir.go\">DeferRollbackDir</a>はそれぞれのディレクトリごとにPermissionを設定したいので(無意味か?)これを使うことにしました。</p>\n<h2><a href=\"https://golang.org/pkg/os/#Stat\">os.Stat</a></h2>\n<p>この関数は対象のファイルまたはディレクトリが存在しないときに<a href=\"https://golang.org/pkg/os/#pkg-variables\">os.ErrNotExist</a>を返却します。</p>\n<p>こんな感じで<a href=\"https://golang.org/pkg/os/#Mkdir\">os.Mkdir</a>と組み合わせます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Stat</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Is</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>ErrNotExist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Mkdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> err\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2><a href=\"https://golang.org/pkg/os/#OpenFile\">os.OpenFile</a></h2>\n<p><a href=\"https://github.com/the-coding-dead/code/blob/main/testutils/defer_rollback_dir.go\">DeferRollbackDir</a>はファイル復元時に、もとのPermissionで復元したいのでPermissionを指定できる<a href=\"https://golang.org/pkg/os/#OpenFile\">os.OpenFile</a>でファイルを作成します。</p>\n<h2>Conclusion</h2>\n<p>大したことやっていないのですが、結構作るの時間かかりました。</p>\n<p>これくらいの関数をまとめてテスト用のパッケージにしてくれてたりしないですかね?</p>\n<p>作ってみようかな?</p>\n<p>あと、<a href=\"https://golang.org/pkg/testing/#T.Cleanup\">(*T).Cleanup</a>が便利すぎますね</p>\n<p>以上です。</p>\n","title":"Go - テストデータの巻き戻し","date":"2021-03-31","description":"ユニットテストで変更されたデータを終了後に戻したいとき、ありますよね?"}},"__N_SSG":true}